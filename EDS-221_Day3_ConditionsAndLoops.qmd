---
title: "EDS-221_Day3_ConditionsAndLoops"
author: "OP"
format: html
editor: visual
execute: 
  echo: false
  warning: false
---

```{r}
library(tidyverse)
library(janitor)
library(palmerpenguins)
```

## Conditional statements

```{r}
temperature <- 95

if (temperature > 97) {
  print("Temperature warning")
}else 
  print("Temperature is within the norm")
```

#### Create an if statement for blue whales lengths,

length = 40 m. Add an if else statement that returns "GIANT" if the length \> 35, "MEDIUM", between 20 and 35, "SMALL" if \< = 20

```{r}

whale_length_m <- 35

if (whale_length_m > 35) {
  print("GIANT")
}else if(whale_length_m > 20 & whale_length <= 35)
  {print("MEDIUM")
}else if (whale_length_m <= 20)
  print("SMALL")

```

### Switch statements

```{r}
housing_type <- "whole"
switch(housing_type, 
       "single" = print("400"),
       "double" = print("750"),
       "whole" = print("1100"))

# the same code in if-else statements
if (housing_type == "single") {
  print("400")
}else if(housing_type == "double"){
  print("750")
}else if (housing_type == "whole"){
  print("1100")
}

```

### For loops

```{r}
height <- c(58, 61, 65, 72, 89, 94, 101)

for (i in seq_along(height)){
  half_height = height[i] / 2
  #print(half_height)
}
  
# --- for each value in the height value, return the sum of the value + the one right after if...

# create blank vector to store the new vector
height2 <- vector (mode = "numeric", length = (length(height)))

for (i in seq_along(height)){
  sum_height = height[i] + height[i+1] 
  height2[i] <- sum_height
}

height2

```

```{r}


for (i in seq_along(height)){
  sum_height = height[i] + height[i+1] 
  print(sum_height)
}

```

```{r}
for (i in seq(1:(length(height) -1))) {
  sum_height = height[i] + height[i+1] 
  print(sum_height)
}

```

#### Create for loop that calculates the value of height for each element divided by the mean of the *entire height vector*

```{r}

for (i in seq_along(height)){
  standardized_height = height[i] / mean(height)
  print(standardized_height)
}
```

```{r}
for (i in seq_along(penguins)){
  if(is.numeric(penguins[[i]])){
    penguin_med <- median(penguins[[i]], na.rm = TRUE)
    print(penguin_med)
  }
}

# how to extract the title of a column?

```

### Write a for loop with a conditional statement that returns the means of all numeric variables in the penguins dataframe

```{r}
for (i in seq_along(penguins)) {
  if(is.numeric(penguins[[i]])) {
    median_penguin <- median(penguins[[i]], na.rm = TRUE)
    print(median_penguin)
  }
}
```

### Functional programming for easier iteration

Use apply() to iterate over rows or columns, MARGIN = 1 (rows), MARGIN = 2(columns)

```{r}
apply(X = mtcars, MARGIN = 2, FUN = median)

apply(mtcars, 2, median)
```

### Dyplr::accross()

```{r}
# --- mean flipper length of penguins by species
penguins %>% 
  group_by(island, species, sex) %>% 
  summarize(mean_flipper_length = mean(flipper_length_mm, na.rm = TRUE),
            sd_flipper_length = sd(flipper_length_mm, na.rm = TRUE),
            max_body_mass = max(body_mass_g, na.rm = TRUE))

```

```{r}
penguins %>% 
  group_by(species) %>% 
  summarize(across(
            where(is.numeric),
            mean, 
            na.rm = TRUE))
              
```

### Detecting a string pattern

```{r}
food <- "I love enchiladas"

str_detect(food, "burritos")

if(str_detect(food, "burritos")) {
  print("Yay, burritos!")
}else {
  print("What about burritos?!")
}
```
